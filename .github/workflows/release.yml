name: Release

on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME}}

jobs:

  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2
        with:
          configuration: "changelog.json"
          toTag: ${{ github.event.inputs.version }}
          commitMode: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: create changelog file
        env:
          VERSION: ${{ github.event.inputs.version }}
          CHANGELOG: ${{ steps.build_changelog.outputs.changelog }}
        run: |
          echo "Image: \`ghcr.io/${GITHUB_REPOSITORY}:${VERSION}\`" >> .changelog
          echo "${CHANGELOG}" >> .changelog
      - name: Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          body_path: .changelog
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  promote:
    needs: release
    name: Promote Container Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Promote Container Image
        if: env.DOCKERHUB_USERNAME != ''
        run: make docker.promote
        env:
          RELEASE_TAG: ${{ steps.branch-name.outputs.tag }}
          SOURCE_TAG: main

  lint-and-test:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Bump Version
        run: |-
          sed -i "s|version: [^ ]*|version: ${{ steps.branch-name.outputs.tag }}|g" deploy/charts/welcome/Chart.yaml
          sed -i "s|appVersion: [^ ]*|appVersion: ${{ steps.branch-name.outputs.tag }}|g" deploy/charts/welcome/Chart.yaml

      - name: Generate chart
        run: |
          make helm.build

      - name: Set up Helm
        uses: azure/setup-helm@v1.1
        with:
          version: v3.4.2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.2.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config=.github/ci/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run chart-testing (lint)
        run: ct lint --config=.github/ci/ct.yaml

  release-helm:
    needs: [lint-and-test, promote]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Bump Version
        run: |-
          sed -i "s|version: [^ ]*|version: \"${{ steps.branch-name.outputs.tag }}\"|g" deploy/charts/welcome/Chart.yaml
          sed -i "s|appVersion: [^ ]*|appVersion: \"v${{ steps.branch-name.outputs.tag }}\"|g" deploy/charts/welcome/Chart.yaml

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v1.1
        with:
          version: v3.4.2

      - name: Generate chart
        run: |
          make helm.build

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.2.1
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: "helm-chart-${{ steps.branch-name.outputs.tag }}"
        with:
          charts_dir: deploy/charts
          charts_repo_url: https://charts.welcome.knela.dev
      
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: deploy
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "tag": "${{ steps.branch-name.outputs.tag }}"}'
